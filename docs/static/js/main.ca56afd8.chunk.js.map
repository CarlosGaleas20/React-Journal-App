{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/noteReducer.js","reducers/uiReducer.js","components/store/store.js","firebase/firebase-config.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NotesPage.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalPage.js","components/auth/LoginPage.js","components/auth/RegisterPage.js","routes/AuthRouter.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","routes/AppRouter.js","JournalApp.js","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdate","notesFileUrl","notesDelete","notesLogoutCleaning","authReducer","state","action","type","uid","payload","name","DisplayName","initalState","notes","active","noteReducer","map","note","id","filter","initialState","loading","msgError","uiReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","ui","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","notesList","forEach","listChild","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","activeNote","startLoadingNotes","dispatch","setNotes","updateNotes","getState","noteToFirestore","url","doc","update","refreshNote","Swal","fire","icon","title","deleteNote","useForm","useState","value","setValue","reset","formState","handleInputChange","target","NotesAppBar","useDispatch","useSelector","noteDate","moment","date","className","format","style","display","onChange","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NotesPage","formValues","tittle","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","error","removeError","finishLoading","startLoginEP","email","password","signInWithEmailAndPassword","then","user","displayName","catch","e","message","startLogout","signOut","JournalEntry","backgroundSize","backgroundImage","JournalEntries","Sidebar","newNote","Date","getTime","add","JournalPage","LoginPage","formValue","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterPage","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmail","AuthRouter","path","component","PrivateRoutes","isLogged","Component","rest","props","PublicRoutes","AppRouter","check","setCheck","setIsLogged","onAuthStateChanged","exact","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ca56afd8.chunk.js","sourcesContent":["\r\n\r\nconst types = {\r\n    //Tipos para el login\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    //tipos para los errores\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    //Boton de carga\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n    //Agregar notas por usuario\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load a Note',\r\n    notesUpdate: '[Notes] Update a Note',\r\n    notesFileUrl: '[Notes] Update image for url',\r\n    notesDelete: '[Notes] Delete a Note',\r\n    notesLogoutCleaning: '[Notes] Cleaning panel notes',\r\n}\r\n\r\nexport default types;","import types from \"../types/types\";\r\n\r\nconst authReducer = ( state={}, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.DisplayName\r\n            };\r\n        \r\n        case types.logout:\r\n            return {};\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import types from \"../types/types\";\r\n\r\nconst initalState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nconst noteReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default noteReducer;","import types from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","import {createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from '../../reducers/authReducer';\r\nimport noteReducer from '../../reducers/noteReducer';\r\nimport uiReducer from '../../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: noteReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );\r\n\r\nexport default store;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC2GLoBujyGfoc0SBTemHdHEKAlPOfbuEk\",\r\n    authDomain: \"react-app-journal-79dee.firebaseapp.com\",\r\n    projectId: \"react-app-journal-79dee\",\r\n    storageBucket: \"react-app-journal-79dee.appspot.com\",\r\n    messagingSenderId: \"412555753038\",\r\n    appId: \"1:412555753038:web:b1c8bf2038bb2c278cf51f\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async(uid) =>{\r\n    const notesList = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesList.forEach( listChild => {\r\n        notes.push({\r\n            id: listChild.id,\r\n            ...listChild.data()\r\n        })\r\n    }) \r\n\r\n    return notes;\r\n}","\r\n\r\nconst fileUpload = async(file) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dwxy3njrf/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','React-Journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport default fileUpload;","import { db } from \"../firebase/firebase-config\";\r\nimport Swal from 'sweetalert2';\r\nimport types from \"../types/types\";\r\nimport {loadNotes} from '../helpers/loadNotes'\r\nimport fileUpload from \"../helpers/fileUpload\";\r\n\r\n\r\nexport const startNewNote = () =>{\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        const newNote = {\r\n            tittle: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(startLoadingNotes(uid));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) =>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n} \r\n\r\nexport const setNotes = ( notes ) =>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const updateNotes = (note) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        const noteToFirestore = {...note};\r\n        if(!note.url){\r\n            delete noteToFirestore.url;\r\n        }\r\n        delete noteToFirestore.id\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Note saved successfully ',\r\n          });\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) =>({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please Wait',\r\n            allowOutsideClick: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(updateNotes( activeNote ));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) =>{\r\n    return async(dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch( deleteNote(id));\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Note eliminated successfully ',\r\n          });\r\n    }\r\n} \r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from 'react'\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n\r\n    const [value, setValue] = useState(initialState);\r\n\r\n    const reset = (formState = initialState) => {\r\n        setValue(formState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValue({\r\n            ...value,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n    return [\r\n        value,\r\n        handleInputChange,\r\n        reset\r\n    ];\r\n}\r\n\r\nexport default useForm;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startUploading, updateNotes } from '../../actions/notes';\r\n\r\nconst NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const noteDate = moment(note.date);\r\n\r\n    const handleSave = () => {\r\n        dispatch(updateNotes(note));\r\n    }\r\n\r\n    const handlePictureAdd = () =>{\r\n        document.querySelector('#inputPicture').click();\r\n    }\r\n\r\n    const handleInputPicture = ({target}) =>{\r\n        const file = target.files[0];\r\n        if( file ) {\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar animate__animated animate__fadeInRight\">\r\n            <span>{noteDate.format('LL')}</span>\r\n            <input\r\n                type=\"file\"\r\n                style={{display: 'none'}}\r\n                id=\"inputPicture\"\r\n                onChange={handleInputPicture}\r\n                name=\"file\"\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\" \r\n                    onClick={handlePictureAdd}  \r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave} \r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesAppBar;","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport useForm from '../../hooks/useForm';\r\nimport NotesAppBar from './NotesAppBar'\r\n\r\nconst NotesPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector(state => state.notes);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const {tittle, body, id} = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        \r\n        if( note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDeleteNote = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content animate__animated animate__fadeInRight\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome tittle\"\r\n                    className=\"notes__tittle-input\"\r\n                    name=\"tittle\"\r\n                    value={tittle}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <textarea\r\n                    placeholder=\"What happend today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    (note.url)\r\n                    &&\r\n                        <div className=\"notes__image mt-1\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt=\"Imagen\"\r\n                        />\r\n                </div>\r\n                }\r\n\r\n                <button \r\n                    className=\"btn btn-danger mt-5\"\r\n                    onClick={handleDeleteNote}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesPage;\r\n","import React from 'react'\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p className=\"animate__animated animate__fadeInRight\">\r\n                Select Something\r\n                <br />\r\n                Or create a entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5 animate__animated animate__fadeInRight\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingSelected;\r\n","import types from \"../types/types\";\r\n\r\n\r\nexport const setError = (error) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const setLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import types from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, setLoading } from \"./ui\";\r\nimport { noteLogout } from './notes';\r\n\r\n\r\nexport const startLoginEP = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(setLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Welcome:',\r\n                    text: user.displayName\r\n                  });\r\n            })\r\n            .catch( e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Login Error',\r\n                    text: e.message,\r\n                  });\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmail = (email, password, name) =>{\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n         .then( async({user}) => {\r\n             await user.updateProfile({displayName: name});\r\n             dispatch(login(user.uid, user.displayName));\r\n             Swal.fire({\r\n                icon: 'success',\r\n                title: 'User successfully registered',\r\n                text: user.displayName\r\n              });\r\n         })\r\n         .catch(e => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Login Error',\r\n                text: e.message,\r\n              });\r\n         })\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider)\r\n            .then( ({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'Welcome:',\r\n                    text: user.displayName\r\n                  });\r\n            });\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) =>{\r\n        firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const login = ( uid, DisplayName) => ({\r\n    type: types.login,\r\n    payload:{\r\n        uid,\r\n        DisplayName\r\n    }\r\n    }\r\n);\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n    }\r\n);","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nconst JournalEntry = ({id, tittle, body, date, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n\r\n    const handleLoadNote = () => {\r\n        dispatch(activeNote(id,{\r\n            tittle, body, date, url\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeInLeft\"\r\n            onClick={handleLoadNote}\r\n        >\r\n            {\r\n                url\r\n                &&\r\n                <div \r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n                className=\"journal__entry-picture\">\r\n            </div>\r\n            }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-tittle\">{tittle}</p>\r\n                <p className=\"journal__entry-content\">{body}</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntry;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport JournalEntry from './JournalEntry';\r\n\r\nconst JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__fadeInLeft\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                    key={note.id}\r\n                    {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntries;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport JournalEntries from './JournalEntries'\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleNewNote = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar mt-5 animate__animated animate__fadeInLeft\">\r\n                <h3>\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n            </div>\r\n            <div \r\n                className=\"journal__new-entry animate__animated animate__fadeInLeft\"\r\n                onClick={handleNewNote}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p>New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n            \r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport NotesPage from '../notes/NotesPage'\r\nimport NothingSelected from './NothingSelected';\r\nimport Sidebar from './Sidebar'\r\n\r\nconst JournalPage = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"journal__main-content\">\r\n                <Sidebar />\r\n\r\n                <main>\r\n                    {\r\n                        (active)\r\n                        ? (<NotesPage />)\r\n                        : (<NothingSelected />)\r\n                    }\r\n                </main>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JournalPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport useForm from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEP } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValue, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValue;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEP(email, password));\r\n        } \r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if ( password.length < 5) {\r\n            dispatch(setError('Passwords not valid'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleLoginWithGoogle = (e) => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle\">Login</h3>\r\n            <form onSubmit={handleLogin}>\r\n\r\n                {\r\n                    msgError\r\n                    &&\r\n                    <div className=\"auth__alert-error animate__animated animate__wobble\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese un correo\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Ingrese su contraseña\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n                <hr />\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p className=\"mb-1\">Login with Social Media</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleLoginWithGoogle}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link \r\n                    className=\"link\"\r\n                    to='/auth/register'\r\n                    >\r\n                        Create a new Acount\r\n                    </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport useForm from '../../hooks/useForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmail } from '../../actions/auth';\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const [formValue, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValue;\r\n\r\n    const handleFormRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmail(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length <= 1) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Passwords should be a equals'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle\">Login</h3>\r\n            <form onSubmit={handleFormRegister}>\r\n                {\r\n                    msgError\r\n                    &&\r\n                    <div className=\"auth__alert-error animate__animated animate__wobble\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese un nombre\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ingrese un correo\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Ingrese su contraseña\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirme su contraseña\"\r\n                    name=\"password2\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                >\r\n                    Registrar\r\n                </button>\r\n\r\n                <Link\r\n                    className=\"link mt-5\"\r\n                    to='/auth/login'\r\n                >\r\n                    Already Register?\r\n                    </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport LoginPage from '../components/auth/LoginPage';\r\nimport RegisterPage from '../components/auth/RegisterPage';\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container animate__animated animate__fadeInLeft\">\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={LoginPage} />\r\n                        <Route path='/auth/register' component={RegisterPage} />\r\n                        <Redirect to='/auth/login' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthRouter;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PrivateRoutes = ({\r\n    isLogged,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props) => (\r\n                (isLogged)\r\n                ?\r\n                (<Component {...props} />)\r\n                :\r\n                (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoutes;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PublicRoutes = ({\r\n    isLogged,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = {(props) => (\r\n                (!isLogged)\r\n                ?\r\n                (<Component {...props} />)\r\n                :\r\n                (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoutes;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport JournalPage from '../components/journal/JournalPage';\r\nimport AuthRouter  from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nimport PublicRoutes from './PublicRoutes';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [check, setCheck] = useState(true);\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            if( user?.uid ){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLogged(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLogged(false);\r\n            }\r\n\r\n            setCheck(false);\r\n        })\r\n    }, [ dispatch, setCheck, setIsLogged ])\r\n\r\n    if(check){\r\n        return <div className=\"auth__login-screen\"></div>\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n\r\n                <Switch>\r\n                    <PublicRoutes\r\n                        isLogged={isLogged}\r\n                        path='/auth' \r\n                        component={AuthRouter} />\r\n                    <PrivateRoutes\r\n                        isLogged={isLogged}\r\n                        exact \r\n                        path='/' \r\n                        component={JournalPage} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport store from './components/store/store';\r\nimport AppRouter from './routes/AppRouter';\r\n\r\nconst JournalApp = () => {\r\n    return (\r\n        <>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JournalApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport JournalApp from './JournalApp';\n\nimport './styles/style.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}